use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1302982106',
        'name' => 'top.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml11.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title>";
#line 5 "template/tt2/top.html"
    $output .=  $stash->get('slide_heading');
    $output .=  "</title>\n<meta name=\"Content-Type\" content=\"text/html; charset=";
#line 6 "template/tt2/top.html"
    $output .=  $stash->get('character_encoding');
    $output .=  "\" />\n<meta name=\"generator\" content=\"";
#line 7 "template/tt2/top.html"
    $output .=  $stash->get('spork_version');
    $output .=  "\" />\n<link rel='icon' href='favicon.png' />\n";
#line 11 "template/tt2/top.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['hub', 0, 'css', 0, 'files', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'css_file'} = $_tt_value;
    $output .=  "  <link rel=\"stylesheet\" type=\"text/css\" href=\"";
#line 10 "template/tt2/top.html"
    $output .=  $stash->get('css_file');
    $output .=  "\" />\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "<style type=\"text/css\"><!--\n";
#line 13 "template/tt2/top.html"
    $output .=  $context->include('slide.css');
    $output .=  "\n--></style>\n<script type=\"text/javascript\" src=\"js/jquery-1.5.2.min.js\"></script>\n<script type=\"text/javascript\">\n";
#line 17 "template/tt2/top.html"
    $output .=  $context->include('controls.js');
    $output .=  "\n</script>\n</head>\n<body>\n<div id=\"topbar\">\n<table width='100%'>\n<tr>\n<td width=\"13%\">";
#line 24 "template/tt2/top.html"
    $output .=  $stash->get('presentation_topic');
    $output .=  "</td>\n<td align=\"center\" width=\"73%\">\n    <a accesskey=\"s\" href=\"start.html\">";
#line 26 "template/tt2/top.html"
    $output .=  $stash->get('presentation_title');
    $output .=  "</a>\n</td>\n<td align=\"right\" width=\"13%\">\n    ";
#line 1 "template/tt2/top.html"
    $output .=  $stash->get('slide_num') ? ("#" . $stash->get('slide_num')) : '&nbsp;';
    $output .=  "\n</td>\n</tr>\n</table>\n</div>\n<!-- END top -->\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
